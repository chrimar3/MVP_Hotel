# Default server configuration for MVP Hotel Review Generator
server {
    listen 8080;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Security
    server_tokens off;
    
    # Rate limiting
    limit_req zone=general burst=20 nodelay;

    # Main application route
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache control for HTML files
        location ~* \.html$ {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
        
        # Cache control for static assets
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin "*";
        }
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Health check HTML page
    location = /health.html {
        try_files $uri =404;
        access_log off;
    }

    # API proxy (if needed)
    location /api/ {
        limit_req zone=api burst=5 nodelay;
        proxy_pass http://api-backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Security.txt
    location = /.well-known/security.txt {
        alias /usr/share/nginx/html/security.txt;
    }

    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ \.(md|env|config|log)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Monitoring endpoint for load balancers
    location = /ping {
        access_log off;
        return 200 "pong\n";
        add_header Content-Type text/plain;
    }

    # Error pages
    error_page 404 /404.html;
    location = /404.html {
        internal;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        internal;
    }

    # Logging
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
}

# API backend upstream (placeholder)
upstream api-backend {
    server 127.0.0.1:3001 max_fails=3 fail_timeout=30s;
    keepalive 32;
}