name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run E2E tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}
      
      - name: Run Playwright E2E tests
        run: npx playwright test --project=${{ matrix.browser }}
        env:
          CI: true
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-results-${{ matrix.browser }}
          path: |
            test-results/
            playwright-report/
          retention-days: 30

  # Mobile E2E Tests
  mobile-test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium
      
      - name: Run Mobile E2E tests
        run: npx playwright test --project="Mobile Chrome" --project="Mobile Safari"
        env:
          CI: true
      
      - name: Upload mobile test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-mobile-results
          path: |
            test-results/
            playwright-report/
          retention-days: 30

  # Accessibility Tests
  accessibility-test:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium
      
      - name: Run Accessibility tests
        run: npx playwright test accessibility.spec.js
        env:
          CI: true
      
      - name: Upload accessibility test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-accessibility-results
          path: |
            test-results/
            playwright-report/
          retention-days: 30

  # Performance baseline
  performance-test:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium
      
      - name: Run Performance tests
        run: npx playwright test --grep "performance|load time"
        env:
          CI: true
      
      - name: Upload performance test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-performance-results
          path: |
            test-results/
            playwright-report/
          retention-days: 30

  # Combine and publish results
  publish-results:
    needs: [test, mobile-test, accessibility-test, performance-test]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
      
      - name: Publish Test Results
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Playwright E2E Test Results
          path: '**/e2e-results.xml'
          reporter: java-junit
          fail-on-error: false
      
      - name: Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let comment = '## ðŸŽ­ E2E Test Results\n\n';
            
            // Add results summary
            comment += '### Test Summary\n';
            comment += '- âœ… Desktop browsers: chromium, firefox, webkit\n';
            comment += '- ðŸ“± Mobile testing: Chrome and Safari\n';
            comment += '- â™¿ Accessibility compliance checks\n';
            comment += '- âš¡ Performance baseline validation\n\n';
            
            comment += '### Artifacts\n';
            comment += 'Test reports and screenshots are available in the workflow artifacts.\n\n';
            comment += 'ðŸ’¡ View detailed results in the [Playwright report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });